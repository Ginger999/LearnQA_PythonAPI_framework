{"name": "Deleting a user by another user", "status": "failed", "statusDetails": {"message": "AssertionError: Unexpected status code! Expected: 200 Actual: 404 User id = 34284 should not have been deleted!", "trace": "self = <test_user_delete.TestUserDelete object at 0x0000020ED89F2D90>\n\n    @allure.suite(\"delete_003\")\n    @allure.title(\"Deleting a user by another user\")\n    @allure.description(\"This test is logged in by User1 and tries delete data of User2\")\n    def test_delete_user2_by_logged_user1(self):\n        # Register User1 and User2\n        created_user_1 = self.create_user()\n        created_user_2 = self.create_user()\n        user_id_1 = created_user_1.get('user_id')\n        user_id_2 = created_user_2.get('user_id')\n    \n        # Login by User1\n        logged_user_1 = self.login_by_user(created_user_1.get('email'), created_user_1.get('password'))\n        auth_sid_1 = self.get_cookie(logged_user_1, \"auth_sid\")\n        token_1 = self.get_header(logged_user_1, \"x-csrf-token\")\n        Assertions.assert_status_code(logged_user_1, 200)\n    \n        # Delete User2\n        deleted_user_2 = self.delete_user(user_id_2, token_1, auth_sid_1)\n        # Assertions.assert_unexpected_status_code(deleted_user_2, 200)  # Отловим при проверке, удалились ли данные\n    \n        # Get User2 - user should be\n        resulted_user_2 = self.get_user(user_id_2, None, None)\n        Assertions.assert_status_code(resulted_user_2, 200, f\"{resulted_user_2.text}\")\n    \n        # Get User1 - user should be\n        resulted_user_1 = self.get_user(user_id_1, token_1, auth_sid_1)\n>       Assertions.assert_status_code(resulted_user_1, 200, f\"User id = {user_id_1} should not have been deleted!\")\n\ntests\\test_user_delete.py:133: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [404]>, expected_status_code = 200, error_message = 'User id = 34284 should not have been deleted!'\n\n    @staticmethod\n    def assert_status_code(response: Response, expected_status_code, error_message=\"\"):\n>       assert response.status_code == expected_status_code,\\\n            f\"Unexpected status code! Expected: {expected_status_code} Actual: {response.status_code} {error_message}\"\nE       AssertionError: Unexpected status code! Expected: 200 Actual: 404 User id = 34284 should not have been deleted!\n\nlib\\assertions.py:56: AssertionError"}, "description": "This test is logged in by User1 and tries delete data of User2", "steps": [{"name": "create_user", "status": "passed", "steps": [{"name": "POST request to URL '/user/'", "status": "passed", "start": 1651035785441, "stop": 1651035786010}], "start": 1651035785441, "stop": 1651035786010}, {"name": "create_user", "status": "passed", "steps": [{"name": "POST request to URL '/user/'", "status": "passed", "start": 1651035786010, "stop": 1651035786649}], "start": 1651035786010, "stop": 1651035786649}, {"name": "login_by_user", "status": "passed", "steps": [{"name": "POST request to URL '/user/login'", "status": "passed", "start": 1651035786649, "stop": 1651035786727}], "parameters": [{"name": "email", "value": "'learnqa04272022080305__440853@example.com'"}, {"name": "password", "value": "'1234'"}], "start": 1651035786649, "stop": 1651035786727}, {"name": "delete_user", "status": "passed", "steps": [{"name": "DELETE request to URL '/user/34285'", "status": "passed", "start": 1651035786727, "stop": 1651035787431}], "parameters": [{"name": "user_id", "value": "'34285'"}, {"name": "token", "value": "'0d1bfee8605203a0cfc17da9e132812f7281e64df36db7e3422e0c96181322eb83b4f4b4'"}, {"name": "auth_sid", "value": "'4e90f3a701fc87bc49ccba4b240e2a62f36db7e3422e0c96181322eb83b4f4b4'"}], "start": 1651035786727, "stop": 1651035787431}, {"name": "get_user", "status": "passed", "steps": [{"name": "GET request to URL '/user/34285'", "status": "passed", "start": 1651035787431, "stop": 1651035788141}], "parameters": [{"name": "user_id", "value": "'34285'"}, {"name": "token", "value": "None"}, {"name": "auth_sid", "value": "None"}], "start": 1651035787431, "stop": 1651035788141}, {"name": "get_user", "status": "passed", "steps": [{"name": "GET request to URL '/user/34284'", "status": "passed", "start": 1651035788141, "stop": 1651035788691}], "parameters": [{"name": "user_id", "value": "'34284'"}, {"name": "token", "value": "'0d1bfee8605203a0cfc17da9e132812f7281e64df36db7e3422e0c96181322eb83b4f4b4'"}, {"name": "auth_sid", "value": "'4e90f3a701fc87bc49ccba4b240e2a62f36db7e3422e0c96181322eb83b4f4b4'"}], "start": 1651035788141, "stop": 1651035788691}], "start": 1651035785441, "stop": 1651035788691, "uuid": "415180b5-886c-420d-9df2-96d6f0f59c1b", "historyId": "d3deadf7c2b26f02eb59e2c1294eed39", "testCaseId": "8ba7d5ca48149af30602fe089b94e016", "fullName": "tests.test_user_delete.TestUserDelete#test_delete_user2_by_logged_user1", "labels": [{"name": "epic", "value": "Deleting cases"}, {"name": "suite", "value": "delete_003"}, {"name": "parentSuite", "value": "tests"}, {"name": "subSuite", "value": "TestUserDelete"}, {"name": "host", "value": "kalinina-y-nb"}, {"name": "thread", "value": "12508-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_user_delete"}]}